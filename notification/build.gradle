dependencies {
    implementation(group: 'io.ultrabrew.metrics', name: 'metrics-core', version: '0.8.0')
    implementation(group: 'com.101tec', name: 'zkclient', version: '0.11')
    implementation(group: 'com.esotericsoftware.kryo', name: 'kryo', version: '2.24.0')
    implementation(group: 'com.google.guava', name: 'guava', version: '18.0')
    implementation(group: 'com.google.inject', name: 'guice', version: '4.2.3')
    implementation(group: 'com.opsgenie.integration', name: 'sdk', version: '2.11.2')
    implementation(group: 'com.yahoo.athenz', name: 'athenz-cert-refresher', version: '1.10.15')
    implementation(group: 'commons-configuration', name: 'commons-configuration', version: '1.10')
    implementation(group: 'io.pebbletemplates', name: 'pebble', version: '3.1.4')
    implementation(group: 'it.unimi.dsi', name: 'dsiutils', version: '2.6.17') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    implementation(group: 'net.openhft', name: 'zero-allocation-hashing', version: '0.12')
    implementation(group: 'org.apache.commons', name: 'commons-email', version: '1.5')
    implementation(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13')
    implementation(group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13')
    implementation(group: 'org.apache.kafka', name: 'kafka_2.9.2', version: '0.8.2.2')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.16.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.16.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.16.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.16.0')
    implementation(group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.4.14')
    implementation(group: 'org.jfree', name: 'jfreechart', version: '1.5.2')
    implementation(group: 'org.jfree', name: 'jfreesvg', version: '3.4')
    implementation(group: 'org.jsoup', name: 'jsoup', version: '1.13.1')

    testImplementation(group: 'org.apache.curator', name: 'curator-test', version: '5.1.0')
    testImplementation(group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3')
    testImplementation(group: 'org.jmockit', name: 'jmockit', version: '1.49')
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2')
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.6.2')
    testImplementation(group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.6.2')

    testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2')

    archives('org.codehaus.plexus:plexus-utils:3.3.0') {
        force true
    }
}

test {
    jvmArgs = [
            "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}",
            "-Duser.language=en",
            "-Duser.timezone=UTC"
    ]

    classpath = project.sourceSets.test.runtimeClasspath +
            files("${projectDir}/src/main/resources/templates")

    useJUnitPlatform()

    testLogging {
        events = ["passed", "skipped", "failed"]
        exceptionFormat = 'full'
        showStandardStreams = true
    }

    reports {
        html.enabled = true
    }
}
